Index: app/src/main/java/com/triplanner/triplanner/ui/MyTrip/ListMyTripFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.triplanner.triplanner.ui.MyTrip;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.triplanner.triplanner.R;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link ListMyTripFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class ListMyTripFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public ListMyTripFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment ListMyTripFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static ListMyTripFragment newInstance(String param1, String param2) {\r\n        ListMyTripFragment fragment = new ListMyTripFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_list_my_trip, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/ListMyTripFragment.java b/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/ListMyTripFragment.java
--- a/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/ListMyTripFragment.java	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/ListMyTripFragment.java	(date 1689239565534)
@@ -7,6 +7,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 
 import com.triplanner.triplanner.R;
 
@@ -25,6 +26,9 @@
     // TODO: Rename and change types of parameters
     private String mParam1;
     private String mParam2;
+    Button buttonMaps;
+
+
 
     public ListMyTripFragment() {
         // Required empty public constructor
@@ -60,6 +64,10 @@
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
+        View view= inflater.inflate(R.layout.fragment_list_my_trip, container, false);
+
+        buttonMaps= view.findViewById(R.id.fragment_button_maps);
+
         // Inflate the layout for this fragment
         return inflater.inflate(R.layout.fragment_list_my_trip, container, false);
     }
Index: app/src/main/res/layout/fragment_list_my_trip.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingBottom=\"?attr/actionBarSize\"\r\n    tools:context=\".ui.MyTrip.ListMyTripFragment\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView8\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"60dp\"\r\n        android:layout_marginTop=\"36dp\"\r\n        android:text=\"My Plans\"\r\n        android:textColor=\"@color/blue\"\r\n        android:textSize=\"34sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <ListView\r\n        android:id=\"@+id/fragment_list_my_trip_list\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:background=\"@drawable/img_back\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView8\"\r\n        tools:layout_editor_absoluteX=\"1dp\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_list_my_trip.xml b/app/src/main/res/layout/fragment_list_my_trip.xml
--- a/app/src/main/res/layout/fragment_list_my_trip.xml	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/app/src/main/res/layout/fragment_list_my_trip.xml	(date 1689239565544)
@@ -27,5 +27,12 @@
         android:background="@drawable/img_back"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/textView8"
-        tools:layout_editor_absoluteX="1dp" />
+        tools:layout_editor_absoluteX="1dp" >
+
+        <Button
+            android:id="@+id/fragment_button_maps"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Button" />
+    </ListView>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.triplanner.triplanner\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable/img_logo\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/img_logo\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Triplanner\">\r\n        <activity\r\n            android:name=\"com.triplanner.triplanner.ui.profile.LogoutActivity\"\r\n            android:exported=\"false\" />\r\n        <activity android:name=\"com.triplanner.triplanner.UserDetailsActivity\" />\r\n        <activity android:name=\"com.triplanner.triplanner.ResetPassActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEN\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data\r\n                    android:host=\"www.theiitiancoder.com\"\r\n                    android:pathPrefix=\"/resetPassword\"\r\n                    android:scheme=\"https\" />\r\n            </intent-filter>\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data\r\n                    android:host=\"theiitiancoder.com\"\r\n                    android:pathPattern=\"/resetPassword\"\r\n                    android:scheme=\"https\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\"com.triplanner.triplanner.ForgotPasswordActivity\" />\r\n        <activity\r\n            android:name=\"com.triplanner.triplanner.SplashActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\"com.triplanner.triplanner.LoginActivity\" />\r\n        <activity android:name=\"com.triplanner.triplanner.RegisterActivity\" />\r\n        <activity\r\n            android:name=\"com.triplanner.triplanner.MainActivity\"\r\n            android:theme=\"@style/Theme.Triplanner.ActionBar\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/app/src/main/AndroidManifest.xml	(date 1689238988638)
@@ -13,11 +13,15 @@
         android:roundIcon="@drawable/img_logo"
         android:supportsRtl="true"
         android:theme="@style/Theme.Triplanner">
+        <meta-data
+            android:name="com.google.android.geo.API_KEY"
+            android:value="AIzaSyD5iAAUo7k43rJzBeOhfx8fDO1qV-Zm7Lw" />
         <activity
             android:name="com.triplanner.triplanner.ui.profile.LogoutActivity"
             android:exported="false" />
         <activity android:name="com.triplanner.triplanner.UserDetailsActivity" />
-        <activity android:name="com.triplanner.triplanner.ResetPassActivity"
+        <activity
+            android:name="com.triplanner.triplanner.ResetPassActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.VIEN" />
Index: app/src/main/java/com/triplanner/triplanner/Model/TripDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/triplanner/triplanner/Model/TripDao.java b/app/src/main/java/com/triplanner/triplanner/Model/TripDao.java
new file mode 100644
--- /dev/null	(date 1689237287529)
+++ b/app/src/main/java/com/triplanner/triplanner/Model/TripDao.java	(date 1689237287529)
@@ -0,0 +1,22 @@
+package com.triplanner.triplanner.Model;
+
+
+import androidx.room.Dao;
+import androidx.room.Delete;
+import androidx.room.Insert;
+import androidx.room.OnConflictStrategy;
+import androidx.room.Query;
+import com.triplanner.triplanner.Model.Trip;
+import java.util.List;
+
+@Dao
+public interface TripDao {
+    @Query("select * from Trip where travelerMail=:travelerMail")
+    List<Trip> getTripByEmail(String travelerMail);
+
+    @Insert(onConflict = OnConflictStrategy.REPLACE)
+    void insertAll(Trip... trips);
+
+    @Delete
+    void deleteTrip(Trip trip);
+}
\ No newline at end of file
Index: app/src/main/java/com/triplanner/triplanner/Model/AppLocalDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.triplanner.triplanner.Model;\r\n\r\nimport android.content.Context;\r\n\r\nimport androidx.room.Database;\r\nimport androidx.room.Room;\r\nimport androidx.room.RoomDatabase;\r\n\r\n@Database(entities ={Traveler.class,FavoriteCategories.class,OpenHours.class,Place.class}, version = 2,exportSchema = true)\r\nabstract class AppLocalDbRepository extends RoomDatabase {\r\n    public abstract TravelerDao travelerDao();\r\n    public abstract FavoriteCategoriesDao favoriteCategoriesDao();\r\n    public abstract OpenHoursDao openHoursDao();\r\n    public abstract PlaceDao placeDao();\r\n}\r\npublic class AppLocalDB {\r\n    public static AppLocalDbRepository getDatabase(Context context) {\r\n        AppLocalDbRepository db = Room.databaseBuilder(context,\r\n                AppLocalDbRepository.class,\r\n                \"dbFileName.db\")\r\n                .fallbackToDestructiveMigration()\r\n                .build();\r\n        return db;\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/triplanner/triplanner/Model/AppLocalDB.java b/app/src/main/java/com/triplanner/triplanner/Model/AppLocalDB.java
--- a/app/src/main/java/com/triplanner/triplanner/Model/AppLocalDB.java	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/app/src/main/java/com/triplanner/triplanner/Model/AppLocalDB.java	(date 1689237403702)
@@ -6,7 +6,7 @@
 import androidx.room.Room;
 import androidx.room.RoomDatabase;
 
-@Database(entities ={Traveler.class,FavoriteCategories.class,OpenHours.class,Place.class}, version = 2,exportSchema = true)
+@Database(entities ={Traveler.class,FavoriteCategories.class,Trip.class,OpenHours.class,Place.class}, version = 1,exportSchema = true)
 abstract class AppLocalDbRepository extends RoomDatabase {
     public abstract TravelerDao travelerDao();
     public abstract FavoriteCategoriesDao favoriteCategoriesDao();
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id \"androidx.navigation.safeargs\"\r\n}\r\napply plugin: 'realm-android'\r\n//apply plugin: \"androidx.navigation.safeargs\"\r\n\r\nandroid {\r\n    compileSdkVersion 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.triplanner.triplanner\"\r\n        minSdkVersion 19\r\n        targetSdkVersion 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        multiDexEnabled true\r\n        javaCompileOptions {\r\n            annotationProcessorOptions {\r\n                arguments += [\"room.schemaLocation\": \"$projectDir/schemas\".toString()]\r\n            }\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    buildFeatures{\r\n        viewBinding = true\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildToolsVersion '33.0.1'\r\n}\r\nrealm {\r\n    syncEnabled = true\r\n}\r\ndependencies {\r\n    implementation 'com.google.android.gms:play-services-auth:20.5.0'\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.5'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.libraries.places:places:2.5.0'\r\n//    implementation \"io.realm:realm-gradle-plugin:10.8.1\"\r\n    implementation 'com.recombee:api-client:3.2.0'\r\n    // Room\r\n    implementation \"android.arch.persistence.room:runtime:1.0.0\"\r\n    implementation(\"androidx.room:room-runtime:2.2.0-rc01\")\r\n    implementation 'androidx.room:room-runtime:2.2.5'\r\n    annotationProcessor \"android.arch.persistence.room:compiler:1.0.0\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/app/build.gradle	(date 1689238703456)
@@ -1,6 +1,7 @@
 plugins {
     id 'com.android.application'
     id "androidx.navigation.safeargs"
+    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
 }
 apply plugin: 'realm-android'
 //apply plugin: "androidx.navigation.safeargs"
@@ -42,6 +43,7 @@
     syncEnabled = true
 }
 dependencies {
+    implementation 'com.google.android.gms:play-services-maps:18.0.2'
     implementation 'com.google.android.gms:play-services-auth:20.5.0'
     implementation 'com.android.support:multidex:1.0.3'
     implementation 'androidx.appcompat:appcompat:1.2.0'
@@ -53,6 +55,7 @@
     implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
     implementation 'com.squareup.picasso:picasso:2.71828'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+    implementation 'com.google.android.gms:play-services-maps:18.1.0'
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n       // jcenter()\r\n        mavenCentral()\r\n    }\r\n    dependencies {\r\n//        classpath 'com.android.tools.build:gradle:7.1.1'\r\n        classpath \"com.android.tools.build:gradle:7.0.4\"\r\n        classpath \"io.realm:realm-gradle-plugin:10.8.1\"\r\n        def nav_version = \"2.3.5\"\r\n        classpath \"androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version\"\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n      //  jcenter()\r\n        mavenCentral()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/build.gradle	(date 1689238703464)
@@ -6,9 +6,11 @@
         mavenCentral()
     }
     dependencies {
+
 //        classpath 'com.android.tools.build:gradle:7.1.1'
         classpath "com.android.tools.build:gradle:7.0.4"
         classpath "io.realm:realm-gradle-plugin:10.8.1"
+        classpath 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1'
         def nav_version = "2.3.5"
         classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
         // NOTE: Do not place your application dependencies here; they belong
Index: app/schemas/com.triplanner.triplanner.Model.AppLocalDbRepository/1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"formatVersion\": 1,\r\n  \"database\": {\r\n    \"version\": 1,\r\n    \"identityHash\": \"76feb709f193b55983e57c2d0d28d885\",\r\n    \"entities\": [\r\n      {\r\n        \"tableName\": \"Traveler\",\r\n        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`travelerMail` TEXT NOT NULL, `travelerBirthYear` INTEGER, `travelerGender` TEXT, `travelerName` TEXT, PRIMARY KEY(`travelerMail`))\",\r\n        \"fields\": [\r\n          {\r\n            \"fieldPath\": \"travelerMail\",\r\n            \"columnName\": \"travelerMail\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"travelerBirthYear\",\r\n            \"columnName\": \"travelerBirthYear\",\r\n            \"affinity\": \"INTEGER\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"travelerGender\",\r\n            \"columnName\": \"travelerGender\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"travelerName\",\r\n            \"columnName\": \"travelerName\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          }\r\n        ],\r\n        \"primaryKey\": {\r\n          \"columnNames\": [\r\n            \"travelerMail\"\r\n          ],\r\n          \"autoGenerate\": false\r\n        },\r\n        \"indices\": [],\r\n        \"foreignKeys\": []\r\n      },\r\n      {\r\n        \"tableName\": \"FavoriteCategories\",\r\n        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`category` TEXT NOT NULL, `travelerMail` TEXT, PRIMARY KEY(`category`))\",\r\n        \"fields\": [\r\n          {\r\n            \"fieldPath\": \"category\",\r\n            \"columnName\": \"category\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"travelerMail\",\r\n            \"columnName\": \"travelerMail\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          }\r\n        ],\r\n        \"primaryKey\": {\r\n          \"columnNames\": [\r\n            \"category\"\r\n          ],\r\n          \"autoGenerate\": false\r\n        },\r\n        \"indices\": [],\r\n        \"foreignKeys\": []\r\n      },\r\n      {\r\n        \"tableName\": \"OpenHours\",\r\n        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `open` TEXT, `place_id` TEXT, PRIMARY KEY(`id`))\",\r\n        \"fields\": [\r\n          {\r\n            \"fieldPath\": \"id\",\r\n            \"columnName\": \"id\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"open\",\r\n            \"columnName\": \"open\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"place_id\",\r\n            \"columnName\": \"place_id\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          }\r\n        ],\r\n        \"primaryKey\": {\r\n          \"columnNames\": [\r\n            \"id\"\r\n          ],\r\n          \"autoGenerate\": false\r\n        },\r\n        \"indices\": [],\r\n        \"foreignKeys\": []\r\n      },\r\n      {\r\n        \"tableName\": \"Place\",\r\n        \"createSql\": \"CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `placeID` TEXT, `placeName` TEXT, `placeLocationLat` REAL NOT NULL, `placeLocationLng` REAL NOT NULL, `placeFormattedAddress` TEXT, `placeInternationalPhoneNumber` TEXT, `placeRating` REAL NOT NULL, `placeWebsite` TEXT, `placeImgUrl` TEXT, `day_in_trip` INTEGER NOT NULL, `travelerMail` TEXT, `id_trip` TEXT, `travelerRating` REAL NOT NULL, PRIMARY KEY(`id`))\",\r\n        \"fields\": [\r\n          {\r\n            \"fieldPath\": \"id\",\r\n            \"columnName\": \"id\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeID\",\r\n            \"columnName\": \"placeID\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeName\",\r\n            \"columnName\": \"placeName\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeLocationLat\",\r\n            \"columnName\": \"placeLocationLat\",\r\n            \"affinity\": \"REAL\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeLocationLng\",\r\n            \"columnName\": \"placeLocationLng\",\r\n            \"affinity\": \"REAL\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeFormattedAddress\",\r\n            \"columnName\": \"placeFormattedAddress\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeInternationalPhoneNumber\",\r\n            \"columnName\": \"placeInternationalPhoneNumber\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeRating\",\r\n            \"columnName\": \"placeRating\",\r\n            \"affinity\": \"REAL\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeWebsite\",\r\n            \"columnName\": \"placeWebsite\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"placeImgUrl\",\r\n            \"columnName\": \"placeImgUrl\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"day_in_trip\",\r\n            \"columnName\": \"day_in_trip\",\r\n            \"affinity\": \"INTEGER\",\r\n            \"notNull\": true\r\n          },\r\n          {\r\n            \"fieldPath\": \"travelerMail\",\r\n            \"columnName\": \"travelerMail\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"id_trip\",\r\n            \"columnName\": \"id_trip\",\r\n            \"affinity\": \"TEXT\",\r\n            \"notNull\": false\r\n          },\r\n          {\r\n            \"fieldPath\": \"travelerRating\",\r\n            \"columnName\": \"travelerRating\",\r\n            \"affinity\": \"REAL\",\r\n            \"notNull\": true\r\n          }\r\n        ],\r\n        \"primaryKey\": {\r\n          \"columnNames\": [\r\n            \"id\"\r\n          ],\r\n          \"autoGenerate\": false\r\n        },\r\n        \"indices\": [],\r\n        \"foreignKeys\": []\r\n      }\r\n    ],\r\n    \"setupQueries\": [\r\n      \"CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)\",\r\n      \"INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \\\"76feb709f193b55983e57c2d0d28d885\\\")\"\r\n    ]\r\n  }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/schemas/com.triplanner.triplanner.Model.AppLocalDbRepository/1.json b/app/schemas/com.triplanner.triplanner.Model.AppLocalDbRepository/1.json
--- a/app/schemas/com.triplanner.triplanner.Model.AppLocalDbRepository/1.json	(revision 56233520a481b2626f9f2121280a110c1f64a8e3)
+++ b/app/schemas/com.triplanner.triplanner.Model.AppLocalDbRepository/1.json	(date 1689239652849)
@@ -2,7 +2,7 @@
   "formatVersion": 1,
   "database": {
     "version": 1,
-    "identityHash": "76feb709f193b55983e57c2d0d28d885",
+    "identityHash": "fbbf83bd0d0c47f6e42eb5aafcaa72da",
     "entities": [
       {
         "tableName": "Traveler",
@@ -63,6 +63,56 @@
           "columnNames": [
             "category"
           ],
+          "autoGenerate": false
+        },
+        "indices": [],
+        "foreignKeys": []
+      },
+      {
+        "tableName": "Trip",
+        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id_trip` TEXT NOT NULL, `travelerMail` TEXT, `tripDestination` TEXT, `tripName` TEXT, `tripDaysNumber` INTEGER NOT NULL, `date` TEXT, PRIMARY KEY(`id_trip`))",
+        "fields": [
+          {
+            "fieldPath": "id_trip",
+            "columnName": "id_trip",
+            "affinity": "TEXT",
+            "notNull": true
+          },
+          {
+            "fieldPath": "travelerMail",
+            "columnName": "travelerMail",
+            "affinity": "TEXT",
+            "notNull": false
+          },
+          {
+            "fieldPath": "tripDestination",
+            "columnName": "tripDestination",
+            "affinity": "TEXT",
+            "notNull": false
+          },
+          {
+            "fieldPath": "tripName",
+            "columnName": "tripName",
+            "affinity": "TEXT",
+            "notNull": false
+          },
+          {
+            "fieldPath": "tripDaysNumber",
+            "columnName": "tripDaysNumber",
+            "affinity": "INTEGER",
+            "notNull": true
+          },
+          {
+            "fieldPath": "date",
+            "columnName": "date",
+            "affinity": "TEXT",
+            "notNull": false
+          }
+        ],
+        "primaryKey": {
+          "columnNames": [
+            "id_trip"
+          ],
           "autoGenerate": false
         },
         "indices": [],
@@ -201,7 +251,7 @@
     ],
     "setupQueries": [
       "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
-      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"76feb709f193b55983e57c2d0d28d885\")"
+      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"fbbf83bd0d0c47f6e42eb5aafcaa72da\")"
     ]
   }
 }
\ No newline at end of file
Index: app/src/main/java/com/triplanner/triplanner/ui/MyTrip/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/MapsActivity.java b/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/MapsActivity.java
new file mode 100644
--- /dev/null	(date 1689238917982)
+++ b/app/src/main/java/com/triplanner/triplanner/ui/MyTrip/MapsActivity.java	(date 1689238917982)
@@ -0,0 +1,35 @@
+package com.triplanner.triplanner.ui.MyTrip;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+
+import com.google.android.gms.maps.CameraUpdateFactory;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.maps.model.MarkerOptions;
+import com.triplanner.triplanner.R;
+
+public class MapsActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_maps);
+        SupportMapFragment mapFragment =
+                (SupportMapFragment)getSupportFragmentManager().findFragmentById(R.id.mapID);
+        mapFragment.getMapAsync(new OnMapReadyCallback()
+        {
+            @Override
+            public void onMapReady(GoogleMap googleMap)
+            { // Add a marker in Sydney and move the camera
+                LatLng sydney = new LatLng(-34, 151);
+                googleMap.addMarker(new MarkerOptions().position(sydney).title("Sydney"));
+                googleMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
+            }
+        });
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_maps.xml b/app/src/main/res/layout/activity_maps.xml
new file mode 100644
--- /dev/null	(date 1689238956533)
+++ b/app/src/main/res/layout/activity_maps.xml	(date 1689238956533)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ui.MyTrip.MapsActivity">
+    <fragment
+        android:id="@+id/mapID"
+        android:name="com.google.android.gms.maps.SupportMapFragment"  android:layout_height="200dp" android:layout_width="200dp"/>
+</LinearLayout>
\ No newline at end of file
